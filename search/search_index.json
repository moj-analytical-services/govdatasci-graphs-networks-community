{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"Welcome to the GraphsAndNetworksCommunity page!","text":"<p>This is a space on the web for the <code>#community-graphs-and-networks</code> Gov data science slack channel!</p>"},{"location":"index.html#getting-started","title":"Getting Started","text":"<p>If you're new to graphs, we recommend starting with the basics to build a strong foundation.</p> <ul> <li>Getting Started with Graph Theory: Dive into the fundamentals of graph theory !</li> </ul>"},{"location":"index.html#dive-deeper","title":"Dive Deeper","text":"<p>Once you're comfortable with the basics, intermediate and advanced materials can help expand your knowledge.</p> <ul> <li> <p>Intermediate Graph Material: Explore more complex concepts. Delve into topics such as graph algorithms and graph databases.</p> </li> <li> <p>Advanced Graph Material: Graph Machine Learning and other material is here</p> </li> </ul> <p></p> <p></p> <ul> <li> <p> Add your favourite materials</p> <p>click on github icon on the top of the page and open a Github issue or a Pull Request!</p> </li> <li> <p> Stay Updated</p> <p>Latest news &amp; updates in the world of graphs. Blog</p> </li> <li> <p> Tutorials</p> <p>Useful Tutorials </p> </li> <li> <p> Terminology</p> <p>Glossary</p> </li> </ul>"},{"location":"01_getting_started.html","title":"Getting Started with graph theory","text":""},{"location":"01_getting_started.html#useful-material-to-get-started-with-graphnetwork-theory","title":"Useful material to get started with graph/network theory","text":"<p>d3 graph theory : \ud83d\udca5 Interactive and colorful \ud83c\udfa8 graph theory tutorials made using d3.js \u26a1 </p> <p>These tutorials are designed to make learning graph theory not just informative but also visually engaging. Whether you're a beginner or looking to refresh your knowledge, the dynamic content here will help solidify your understanding of key concepts through visualization.</p> <p>Network Science book : \ud83d\udda5 online version\ud83d\udda5 of the Loscalzo, J., &amp; Barab\u00e1si, A. L. (2016). \"Network science\" book</p> <p>This comprehensive book offers an in-depth look at the field of network science (graph theory), covering both the foundations and their application in various domains. It's an excellent resource for those seeking a thorough grounding in graph theory, presented in a manner that's accessible to practitioners in the field.</p>"},{"location":"02_intermediate_graph_material.html","title":"Intermediate graph material","text":""},{"location":"02_intermediate_graph_material.html#useful-intermediate-books-for-graphnetwork-theory","title":"Useful intermediate books for graph/network theory","text":""},{"location":"02_intermediate_graph_material.html#spectral-graph-theory","title":"Spectral Graph Theory","text":"<p>Why use the laplacian matrix Q&amp;A</p> <p>Spectral Graph Clustering tutorial : A great introduction to spectral clustering methods,using Laplacian matrices derived from graph adjacency matrices.</p> <p>Spectral Graph Theory material : the first set of lectures is quite good and useful.</p>"},{"location":"02_intermediate_graph_material.html#graph-databases","title":"Graph Databases","text":""},{"location":"02_intermediate_graph_material.html#books","title":"Books","text":""},{"location":"02_intermediate_graph_material.html#graphdb-and-graph-query-languages-coursestutorials","title":"GraphDB and Graph Query Languages Courses/Tutorials","text":"<p>Neo4j Graph academy</p> <p>Gremlin Query Language guide</p> <p>Wikidata SPARQL tutorial</p>"},{"location":"02_intermediate_graph_material.html#knowledge-graphs-books-and-resources","title":"Knowledge Graphs Books and resources","text":"<ul> <li>Alan Turing Institute KG interest group: A great resource for everyone interested in knowledge graphs. Great material such as this KG course</li> </ul>"},{"location":"03_advanced_graph_material.html","title":"Advanced graph material","text":""},{"location":"03_advanced_graph_material.html#advanced-graph-material","title":"Advanced Graph material","text":""},{"location":"03_advanced_graph_material.html#machine-learning-with-graphs-course","title":"Machine Learning with Graphs course:","text":"<p>A valuable set of lectures from Stanford University on Machine Learning with Graphs. These lectures, along with the book below provided for free by the author, offer a solid foundation in the subject. Both resources are highly recommended for those looking to understand machine learning with graphs.</p> <ul> <li>CS224W: Machine Learning with Graphs course page</li> <li>CS224W: Machine Learning with Graphs course videos on youtube</li> </ul> <p></p> <p></p>"},{"location":"03_advanced_graph_material.html#machine-learning-with-graphs-blogposts-journal-articles","title":"Machine Learning with Graphs blogposts / journal articles:","text":"<ul> <li> <p>Recent Advances in Efficient and Scalable Graph Neural Networks article</p> </li> <li> <p>A survey on graph kernels paper</p> </li> <li> <p>Node2Vec colab notebook</p> </li> </ul>"},{"location":"Terminology.html","title":"Graphs and Networks Terminology","text":""},{"location":"Terminology.html#terminology","title":"Terminology","text":"<p>Like any discipline, graphs/networks come with their own set of nomenclature. The following descriptions are intentionally simplified\u2014more mathematically rigorous definitions can be found in any graph theory textbook.</p> <ul> <li>Graph/Network: A data structure <code>G = (V, E)</code> where <code>V</code> and <code>E</code> are a set of vertices/nodes and edges/links.</li> <li>Vertex/Node: Represents a single entity such as a person or an object.</li> <li>Edge: Represents a relationship between two vertices (e.g., are these two vertices friends on a social network?).</li> <li>Directed Graph vs. Undirected Graph: Denotes whether the relationship represented by edges is symmetric or not.</li> <li>Weighted vs Unweighted Graph: <ul> <li>In weighted graphs, edges have a weight that could represent the cost of traversing or a similarity score or a distance score.</li> <li>In unweighted graphs, edges have no weight and simply show connections, example: course prerequisites.</li> </ul> </li> <li>Subgraph: A set of vertices and edges that are a subset of the full graph's vertices and edges.</li> <li>Degree: A vertex/node measurement quantifying the number of connected edges.</li> <li>Connected Component: A strongly connected subgraph, meaning that every vertex can reach the other vertices in the subgraph.</li> <li>Shortest Path: The lowest number of edges/links required to traverse between two specific vertices/nodes.</li> </ul>"},{"location":"tutorials.html","title":"Useful Tutorials","text":""},{"location":"tutorials.html#useful-tutorials-for-getting-started-with-graphnetwork-analysis-and-visualisation-in-r-python","title":"Useful tutorials for getting started with graph/network analysis and visualisation in R &amp; Python","text":"<ul> <li> <p>Network analysis with R workshop</p> </li> <li> <p>Network visualization with R  by Ognyanova, K. (2019)</p> </li> <li> <p>Social Network Analysis with Python and NetworkX a Python/NetworkX workshop from Pydata_BCN</p> </li> <li> <p>Network-Analysis-Made-Simple yet another great graph tutorial</p> </li> <li> <p>SPARQL tutorial :great tutorial by Alec Johnson,  former MOJ data scientist/engineer. Sparql is a query language for RDF-based graph databases. This notebook contains code for making Sparql queries with Python, plus some examples that connect to the Wikidata endpoint. There are also some questions to practise writing your own queries. Links to sample answers are included, but there are lots of alternative ways to answer them.</p> </li> </ul> <p>More tutorials coming soon!</p>"},{"location":"blog/index.html","title":"Blog","text":"","tags":["Blog","News"]},{"location":"blog/posts/2024-02-21-new-blog.html","title":"2024 02 21 new blog","text":"<ul> <li>theo-m categories:</li> <li>Hello World</li> </ul>"}]}